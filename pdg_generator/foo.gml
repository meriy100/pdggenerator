graph
[
  directed 0
  node
  [
  ]
{"nodes": [
{"sentence": "", "position": "", "tag": "ENTRY", "id": 1, "nodeName": "Node1"},
{"sentence": "int main(void)", "position": {"column": 5, "line": 1, "file_path": "../testcase/test10.cpp"}, "tag": "Function", "id": 2, "nodeName": "Node2"},
{"sentence": "int a", "position": {"column": 7, "line": 3, "file_path": "../testcase/test10.cpp"}, "tag": "Decl", "id": 4, "nodeName": "Node4"},
{"sentence": "int b", "position": {"column": 10, "line": 3, "file_path": "../testcase/test10.cpp"}, "tag": "Decl", "id": 5, "nodeName": "Node5"},
{"sentence": "int loop", "position": {"column": 13, "line": 3, "file_path": "../testcase/test10.cpp"}, "tag": "Decl", "id": 6, "nodeName": "Node6"},
{"sentence": "int pointa", "position": {"column": 19, "line": 3, "file_path": "../testcase/test10.cpp"}, "tag": "Decl", "id": 7, "nodeName": "Node7"},
{"sentence": "int pointb", "position": {"column": 27, "line": 3, "file_path": "../testcase/test10.cpp"}, "tag": "Decl", "id": 8, "nodeName": "Node8"},
{"sentence": "pointa = 0", "position": {"column": 3, "line": 4, "file_path": "../testcase/test10.cpp"}, "tag": "Assign", "id": 9, "nodeName": "Node9"},
{"sentence": "pointb = 0", "position": {"column": 3, "line": 5, "file_path": "../testcase/test10.cpp"}, "tag": "Assign", "id": 10, "nodeName": "Node10"},
{"sentence": "loop = 1", "position": {"column": 7, "line": 7, "file_path": "../testcase/test10.cpp"}, "tag": "Assign", "id": 11, "nodeName": "Node11"},
{"sentence": "loop <= 10", "position": {"column": 14, "line": 7, "file_path": "../testcase/test10.cpp"}, "tag": "For", "id": 12, "nodeName": "Node12"},
{"sentence": "scanf(\"%d %d\", &a, &b)", "position": {"column": 7, "line": 9, "file_path": "../testcase/test10.cpp"}, "tag": "FuncCall", "id": 15, "nodeName": "Node15"},
{"sentence": "(((a >= 1) && (a <= 3)) && (b >= 1)) && (b <= 3)", "position": {"column": 10, "line": 10, "file_path": "../testcase/test10.cpp"}, "tag": "If", "id": 16, "nodeName": "Node16"},
{"sentence": "a", "position": {"column": 18, "line": 11, "file_path": "../testcase/test10.cpp"}, "tag": "Switch", "id": 18, "nodeName": "Node18"},
{"sentence": "1", "position": {"column": 18, "line": 12, "file_path": "../testcase/test10.cpp"}, "tag": "Case", "id": 20, "nodeName": "Node20"},
{"sentence": "break;", "position": {"column": 13, "line": 14, "file_path": "../testcase/test10.cpp"}, "tag": "Break", "id": 22, "nodeName": "Node22"},
{"sentence": "2", "position": {"column": 18, "line": 15, "file_path": "../testcase/test10.cpp"}, "tag": "Case", "id": 23, "nodeName": "Node23"},
{"sentence": "break;", "position": {"column": 13, "line": 17, "file_path": "../testcase/test10.cpp"}, "tag": "Break", "id": 25, "nodeName": "Node25"},
{"sentence": "3", "position": {"column": 18, "line": 18, "file_path": "../testcase/test10.cpp"}, "tag": "Case", "id": 26, "nodeName": "Node26"},
{"sentence": "break;", "position": {"column": 13, "line": 20, "file_path": "../testcase/test10.cpp"}, "tag": "Break", "id": 28, "nodeName": "Node28"},
{"sentence": "b", "position": {"column": 18, "line": 24, "file_path": "../testcase/test10.cpp"}, "tag": "Switch", "id": 29, "nodeName": "Node29"},
{"sentence": "1", "position": {"column": 18, "line": 25, "file_path": "../testcase/test10.cpp"}, "tag": "Case", "id": 31, "nodeName": "Node31"},
{"sentence": "break;", "position": {"column": 13, "line": 27, "file_path": "../testcase/test10.cpp"}, "tag": "Break", "id": 33, "nodeName": "Node33"},
{"sentence": "2", "position": {"column": 18, "line": 28, "file_path": "../testcase/test10.cpp"}, "tag": "Case", "id": 34, "nodeName": "Node34"},
{"sentence": "break;", "position": {"column": 13, "line": 30, "file_path": "../testcase/test10.cpp"}, "tag": "Break", "id": 36, "nodeName": "Node36"},
{"sentence": "3", "position": {"column": 18, "line": 31, "file_path": "../testcase/test10.cpp"}, "tag": "Case", "id": 37, "nodeName": "Node37"},
{"sentence": "break;", "position": {"column": 13, "line": 33, "file_path": "../testcase/test10.cpp"}, "tag": "Break", "id": 39, "nodeName": "Node39"},
{"sentence": "(((a == 1) && (b == 1)) || ((a == 2) && (b == 2))) || ((a == 3) && (b == 3))", "position": {"column": 12, "line": 37, "file_path": "../testcase/test10.cpp"}, "tag": "If", "id": 40, "nodeName": "Node40"},
{"sentence": "(a == 1) && (b == 2)", "position": {"column": 12, "line": 41, "file_path": "../testcase/test10.cpp"}, "tag": "If", "id": 42, "nodeName": "Node42"},
{"sentence": "pointa = pointa + 1", "position": {"column": 13, "line": 43, "file_path": "../testcase/test10.cpp"}, "tag": "Assign", "id": 44, "nodeName": "Node44"},
{"sentence": "(a == 2) && (b == 3)", "position": {"column": 12, "line": 45, "file_path": "../testcase/test10.cpp"}, "tag": "If", "id": 45, "nodeName": "Node45"},
{"sentence": "pointa = pointa + 2", "position": {"column": 13, "line": 47, "file_path": "../testcase/test10.cpp"}, "tag": "Assign", "id": 47, "nodeName": "Node47"},
{"sentence": "(a == 3) && (b == 1)", "position": {"column": 12, "line": 49, "file_path": "../testcase/test10.cpp"}, "tag": "If", "id": 48, "nodeName": "Node48"},
{"sentence": "pointa = pointa + 5", "position": {"column": 13, "line": 51, "file_path": "../testcase/test10.cpp"}, "tag": "Assign", "id": 50, "nodeName": "Node50"},
{"sentence": "(a == 2) && (b == 1)", "position": {"column": 12, "line": 54, "file_path": "../testcase/test10.cpp"}, "tag": "If", "id": 51, "nodeName": "Node51"},
{"sentence": "pointb = pointb + 1", "position": {"column": 13, "line": 56, "file_path": "../testcase/test10.cpp"}, "tag": "Assign", "id": 53, "nodeName": "Node53"},
{"sentence": "(a == 3) && (b == 2)", "position": {"column": 12, "line": 58, "file_path": "../testcase/test10.cpp"}, "tag": "If", "id": 54, "nodeName": "Node54"},
{"sentence": "pointb = pointb + 2", "position": {"column": 13, "line": 60, "file_path": "../testcase/test10.cpp"}, "tag": "Assign", "id": 56, "nodeName": "Node56"},
{"sentence": "(a == 1) && (b == 3)", "position": {"column": 12, "line": 62, "file_path": "../testcase/test10.cpp"}, "tag": "If", "id": 57, "nodeName": "Node57"},
{"sentence": "pointb = pointb + 5", "position": {"column": 13, "line": 64, "file_path": "../testcase/test10.cpp"}, "tag": "Assign", "id": 59, "nodeName": "Node59"},
{"sentence": "loop = loop - 1", "position": {"column": 9, "line": 70, "file_path": "../testcase/test10.cpp"}, "tag": "Assign", "id": 60, "nodeName": "Node60"},
{"sentence": "(pointa >= 22) || (pointb >= 22)", "position": {"column": 8, "line": 73, "file_path": "../testcase/test10.cpp"}, "tag": "If", "id": 61, "nodeName": "Node61"},
{"sentence": "break;", "position": {"column": 7, "line": 74, "file_path": "../testcase/test10.cpp"}, "tag": "Break", "id": 63, "nodeName": "Node63"},
{"sentence": "pointa > pointb", "position": {"column": 8, "line": 79, "file_path": "../testcase/test10.cpp"}, "tag": "If", "id": 64, "nodeName": "Node64"},
{"sentence": "printf(\"Winner: A (points: A %d, B %d)\", pointa, pointb)", "position": {"column": 7, "line": 80, "file_path": "../testcase/test10.cpp"}, "tag": "FuncCall", "id": 66, "nodeName": "Node66"},
{"sentence": "pointb > pointa", "position": {"column": 8, "line": 82, "file_path": "../testcase/test10.cpp"}, "tag": "If", "id": 67, "nodeName": "Node67"},
{"sentence": "printf(\"Winner: B (points: A %d, B %d)\", pointa, pointb)", "position": {"column": 7, "line": 83, "file_path": "../testcase/test10.cpp"}, "tag": "FuncCall", "id": 69, "nodeName": "Node69"},
{"sentence": "return 0;", "position": {"column": 3, "line": 88, "file_path": "../testcase/test10.cpp"}, "tag": "Return", "id": 70, "nodeName": "Node70"}
],
"control_dependence": [
{ "from_node_id": 1, "to_node_id": 2 },
{ "from_node_id": 2, "to_node_id": 4 },
{ "from_node_id": 2, "to_node_id": 5 },
{ "from_node_id": 2, "to_node_id": 6 },
{ "from_node_id": 2, "to_node_id": 7 },
{ "from_node_id": 2, "to_node_id": 8 },
{ "from_node_id": 2, "to_node_id": 9 },
{ "from_node_id": 2, "to_node_id": 10 },
{ "from_node_id": 2, "to_node_id": 11 },
{ "from_node_id": 2, "to_node_id": 12 },
{ "from_node_id": 2, "to_node_id": 64 },
{ "from_node_id": 2, "to_node_id": 67 },
{ "from_node_id": 2, "to_node_id": 70 },
{ "from_node_id": 12, "to_node_id": 15 },
{ "from_node_id": 12, "to_node_id": 16 },
{ "from_node_id": 12, "to_node_id": 61 },
{ "from_node_id": 16, "to_node_id": 18 },
{ "from_node_id": 16, "to_node_id": 29 },
{ "from_node_id": 16, "to_node_id": 40 },
{ "from_node_id": 16, "to_node_id": 42 },
{ "from_node_id": 16, "to_node_id": 45 },
{ "from_node_id": 16, "to_node_id": 48 },
{ "from_node_id": 16, "to_node_id": 51 },
{ "from_node_id": 16, "to_node_id": 54 },
{ "from_node_id": 16, "to_node_id": 57 },
{ "from_node_id": 16, "to_node_id": 60 },
{ "from_node_id": 18, "to_node_id": 20 },
{ "from_node_id": 18, "to_node_id": 23 },
{ "from_node_id": 18, "to_node_id": 26 },
{ "from_node_id": 20, "to_node_id": 22 },
{ "from_node_id": 23, "to_node_id": 25 },
{ "from_node_id": 26, "to_node_id": 28 },
{ "from_node_id": 29, "to_node_id": 31 },
{ "from_node_id": 29, "to_node_id": 34 },
{ "from_node_id": 29, "to_node_id": 37 },
{ "from_node_id": 31, "to_node_id": 33 },
{ "from_node_id": 34, "to_node_id": 36 },
{ "from_node_id": 37, "to_node_id": 39 },
{ "from_node_id": 42, "to_node_id": 44 },
{ "from_node_id": 45, "to_node_id": 47 },
{ "from_node_id": 48, "to_node_id": 50 },
{ "from_node_id": 51, "to_node_id": 53 },
{ "from_node_id": 54, "to_node_id": 56 },
{ "from_node_id": 57, "to_node_id": 59 },
{ "from_node_id": 61, "to_node_id": 63 },
{ "from_node_id": 63, "to_node_id": 12 },
{ "from_node_id": 64, "to_node_id": 66 },
{ "from_node_id": 67, "to_node_id": 69 }],
"data_dependence": [
{ "from_node_id": 9, "to_node_id": 44 },
{ "from_node_id": 9, "to_node_id": 47 },
{ "from_node_id": 9, "to_node_id": 50 },
{ "from_node_id": 9, "to_node_id": 61 },
{ "from_node_id": 9, "to_node_id": 64 },
{ "from_node_id": 9, "to_node_id": 66 },
{ "from_node_id": 9, "to_node_id": 67 },
{ "from_node_id": 9, "to_node_id": 69 },
{ "from_node_id": 10, "to_node_id": 53 },
{ "from_node_id": 10, "to_node_id": 56 },
{ "from_node_id": 10, "to_node_id": 59 },
{ "from_node_id": 10, "to_node_id": 61 },
{ "from_node_id": 10, "to_node_id": 64 },
{ "from_node_id": 10, "to_node_id": 66 },
{ "from_node_id": 10, "to_node_id": 67 },
{ "from_node_id": 10, "to_node_id": 69 },
{ "from_node_id": 11, "to_node_id": 12 },
{ "from_node_id": 11, "to_node_id": 60 },
{ "from_node_id": 15, "to_node_id": 16 },
{ "from_node_id": 15, "to_node_id": 16 },
{ "from_node_id": 15, "to_node_id": 18 },
{ "from_node_id": 15, "to_node_id": 29 },
{ "from_node_id": 15, "to_node_id": 40 },
{ "from_node_id": 15, "to_node_id": 40 },
{ "from_node_id": 15, "to_node_id": 42 },
{ "from_node_id": 15, "to_node_id": 42 },
{ "from_node_id": 15, "to_node_id": 45 },
{ "from_node_id": 15, "to_node_id": 45 },
{ "from_node_id": 15, "to_node_id": 48 },
{ "from_node_id": 15, "to_node_id": 48 },
{ "from_node_id": 15, "to_node_id": 51 },
{ "from_node_id": 15, "to_node_id": 51 },
{ "from_node_id": 15, "to_node_id": 54 },
{ "from_node_id": 15, "to_node_id": 54 },
{ "from_node_id": 15, "to_node_id": 57 },
{ "from_node_id": 15, "to_node_id": 57 },
{ "from_node_id": 44, "to_node_id": 44 },
{ "from_node_id": 44, "to_node_id": 47 },
{ "from_node_id": 44, "to_node_id": 50 },
{ "from_node_id": 44, "to_node_id": 61 },
{ "from_node_id": 44, "to_node_id": 64 },
{ "from_node_id": 44, "to_node_id": 66 },
{ "from_node_id": 44, "to_node_id": 67 },
{ "from_node_id": 44, "to_node_id": 69 },
{ "from_node_id": 47, "to_node_id": 44 },
{ "from_node_id": 47, "to_node_id": 47 },
{ "from_node_id": 47, "to_node_id": 50 },
{ "from_node_id": 47, "to_node_id": 61 },
{ "from_node_id": 47, "to_node_id": 64 },
{ "from_node_id": 47, "to_node_id": 66 },
{ "from_node_id": 47, "to_node_id": 67 },
{ "from_node_id": 47, "to_node_id": 69 },
{ "from_node_id": 50, "to_node_id": 44 },
{ "from_node_id": 50, "to_node_id": 47 },
{ "from_node_id": 50, "to_node_id": 50 },
{ "from_node_id": 50, "to_node_id": 61 },
{ "from_node_id": 50, "to_node_id": 64 },
{ "from_node_id": 50, "to_node_id": 66 },
{ "from_node_id": 50, "to_node_id": 67 },
{ "from_node_id": 50, "to_node_id": 69 },
{ "from_node_id": 53, "to_node_id": 53 },
{ "from_node_id": 53, "to_node_id": 56 },
{ "from_node_id": 53, "to_node_id": 59 },
{ "from_node_id": 53, "to_node_id": 61 },
{ "from_node_id": 53, "to_node_id": 64 },
{ "from_node_id": 53, "to_node_id": 66 },
{ "from_node_id": 53, "to_node_id": 67 },
{ "from_node_id": 53, "to_node_id": 69 },
{ "from_node_id": 56, "to_node_id": 53 },
{ "from_node_id": 56, "to_node_id": 56 },
{ "from_node_id": 56, "to_node_id": 59 },
{ "from_node_id": 56, "to_node_id": 61 },
{ "from_node_id": 56, "to_node_id": 64 },
{ "from_node_id": 56, "to_node_id": 66 },
{ "from_node_id": 56, "to_node_id": 67 },
{ "from_node_id": 56, "to_node_id": 69 },
{ "from_node_id": 59, "to_node_id": 53 },
{ "from_node_id": 59, "to_node_id": 56 },
{ "from_node_id": 59, "to_node_id": 59 },
{ "from_node_id": 59, "to_node_id": 61 },
{ "from_node_id": 59, "to_node_id": 64 },
{ "from_node_id": 59, "to_node_id": 66 },
{ "from_node_id": 59, "to_node_id": 67 },
{ "from_node_id": 59, "to_node_id": 69 },
{ "from_node_id": 60, "to_node_id": 12 },
{ "from_node_id": 60, "to_node_id": 60 }]
}
